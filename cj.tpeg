/* CJ Controlled Japanese 文法 */

/*
トップの規則
入力をChunkの繰り返しとみる
*/

Sentence = {
    // Chunk* [。．.\n]? {.* #Remain}  // デバッグモード
    (Chunk / TEN)* EOS
    #S
}

Chunk =
    / ExtraChunk   // 接続詞, 副詞, 連体詞
    / AdjvChunk    // 形容詞節, 形容動詞節
    / VerbChunk    // 動詞節
    / NounChunk    // 名詞節

ExtraChunk =
    / Conjunction // 接続詞
    / Adverb  // 副詞
    / Adnominal  // 連体詞

/* 接続詞 CONJ.txt */

Conjunction = { // e.g., こうして
    @choice('dic/CONJ.txt') #Conj 
}

/* 副詞 ADV.txt */
Adverb = {   // e.g., 少し 順次
    @choice('dic/ADV.txt') #Adverb 
}

/* 連体詞 ADNM */
Adnominal = { 
    @choice('dic/ADNM.txt') #Adnominal 
}

/*
名詞 Nounらしいもので始まる
*/

NounChunk = 
    { Noun NounSuffix? #NounChunk } 

NounSuffix = 
    / { [はがも] #Subject }
    / { [をとに] #Object }
    / { 'の' #Of }
    / { 'から' #From }
    / { 'まで' #Until }
    / { 'である' / 'だ' #Be }
    / { 'とする' / 'として' #Let }


/*
名詞 Noun
*/

Noun = 
    / Code
    / NonHiraNoun
    / NewNoun
    / HiraNoun

NounDo = 
    / NonHiraNoun
    / NewNoun
    / HiraNoun

/* コードは名詞扱い */

Code = {
    [A-Za-z0-9]+
    #Code
}

/* ひらがな以外は全て名詞扱い */

NonHiraNoun = {
    NONHIRA+
    #Noun
}

NewNoun =
    / '\「' { (!'\」' .)* #Noun } '\」'
    / '\『' { (!'\』' .)* #Noun } '\』'
    / '\【' { (!'\】' .)* #Noun } '\】'
    / '\〔' { (!'\〕' .)* #Noun } '\〕'

HiraNoun = {
    @choice('dic/NOUN.txt')
    / 'ところ'
    / 'ため'
    / 'こと'
    / 'もの'
    / 'うち'
    / 'あと'
    / ([こそど]/'あそ') 'こ'
    / [こそあど] 'れ'
    / NUM [つこ個] [め目]?
    / ('ひと'/'ふた'/'みっ'/'よっ'/'いつ'/'むっ'/'なな'/'やっ'/'ここの') 'つ' [め目]?
}

/*
動詞の語幹と活用語尾
活用順にしており、活用語尾が同じものまとめている
*/

example Sentence 歩く
example Sentence 認める
example Sentence 会う
example Sentence 止む
example Sentence 止まる
example Sentence 止める

example Sentence 話したく思う    // 連文節
example Sentence 攻撃され始めた
example Sentence 話し終わる
example Sentence 駆け上がる
example Sentence 立ち止まる
example Sentence 止まる
example Sentence 止まらない

/*
動詞の未然形活用
未然形はほぼ確実に助動詞が繋がるため先読みで誤マッチを抑制している
これで「止まる」の先頭文字列「止ま」が「止む」の未然形「止ま」にマッチしない
以下、他の活用も同様
*/

VerbChunk = {
      { VERB5KA #VerbKA } VerbSuffix5KA BaseSuffix?
    / { VERB5SA #VerbSA } VerbSuffix5SA BaseSuffix?
    / { VERB5TA #VerbTA } VerbSuffix5TA BaseSuffix?
    / { VERB5NA #VerbNA } VerbSuffix5NA BaseSuffix?
    / { VERB5MA #VerbMA } VerbSuffix5MA BaseSuffix?
    / { VERB5RA #VerbRA } VerbSuffix5RA BaseSuffix?
    / { VERB5WA #VerbWA } VerbSuffix5WA BaseSuffix?
    / { VERB5GA #VerbGA } VerbSuffix5GA BaseSuffix?
    / { VERB5BA #VerbBA } VerbSuffix5BA BaseSuffix?
    / { VERB1 #Verb1 }   VerbSuffix1 BaseSuffix?
    / NounDo VerbSuffixSHN BaseSuffix?
    #VerbChunk    
}

/*
活用型ごとの動詞の語幹を辞書から生成
「行く」はカ行五段活用だが、イ音便ではなく促音便で活用が異なるため別枠
*/

VERB5KA = @choice('dic/Verb/VERB5KA.txt') &[か-こい]
VERB5SA = @choice('dic/Verb/VERB5SA.txt') &[さ-そ]
VERB5TA = @choice('dic/Verb/VERB5TA.txt') &[た-とっ]
VERB5NA = @choice('dic/Verb/VERB5NA.txt') &[な-のん]
VERB5MA = @choice('dic/Verb/VERB5MA.txt') &[ま-もん]
VERB5RA = @choice('dic/Verb/VERB5RA.txt') &[ら-ろっ]
VERB5WA = @choice('dic/Verb/VERB5WA.txt') &[わいうえおっ]
VERB5GA = @choice('dic/Verb/VERB5GA.txt') &[が-ごい]
VERB5BA = @choice('dic/Verb/VERB5BA.txt') &[ば-ぼん]
VERB1 = @choice('dic/Verb/VERB1.txt')

YetBase = 
    / { 'ない' #DoNot }
    / { 'なかった' #DiDNot }
    / { 'さ'? 'せ' 'られ'? 'る'? #Make }
    / { 'れ' 'る'?  #Been }

BaseSuffix = 
    / BaseCase
    / BaseVerb

BaseVerb = {
    'と' VerbChunk
}

BaseCase = {
    'とき' / 'の'? 'なら' / '場合' / 'ら' #If
}

VerbSuffixSHN = // 行動
    / 'し' YetBase
    / 'し' { ('つつ' / 'ながら') #While }
    / 'し' { 'た' #Did }
    / { 'すれば' #If }
    / { 'され' 'る'? #Been }
    / {'する' / 'して' / 'しよう' / 'し' #Do }


VerbSuffix5KA = // 書
    / 'か' YetBase
    / 'き' { ('つつ' / 'ながら') #While }
    / 'い' { 'た' #Did }
    / { 'けば' #If }
    / {'く' / 'き' / 'いて' / 'こう' #Do }

VerbSuffix5SA = // 探
    / 'さ' YetBase
    / 'し' { 'た' #Did }
    / 'し' { ('つつ' / 'ながら') #While }
    / { 'せば' #If }
    / {'す' / 'して' / 'し' / 'そう' #Do }

VerbSuffix5TA = // 勝
    / 'た' YetBase
    / 'っ' { 'た' #Did }
    / 'ち' { ('つつ' / 'ながら') #While }
    / { 'てば' #If }
    / {'つ' / 'ち' / 'って' / 'とう' #Do }

VerbSuffix5NA = // 死
    / 'な' YetBase
    / 'ん' { 'だ' #Did }
    / 'に' { ('つつ' / 'ながら') #While }
    / {'ねば' #If }
    / {'ぬ' / 'に' / 'んで' / 'のう' #Do }

VerbSuffix5MA = // 読
    / 'ま' YetBase
    / 'ん' { 'だ' #Did }
    / 'み' { ('つつ' / 'ながら') #While }
    / {'めば' #If }
    / {'む' / 'み' / 'んで' / 'もう' #Do }

VerbSuffix5RA = // 切
    / 'ら' YetBase
    / 'っ' { 'た' #Did }
    / 'り' { ('つつ' / 'ながら') #While }
    / { 'れば' #If }
    / {'る' / 'り' / 'って' / 'ろう' #Do }

VerbSuffix5WA = // 笑
    / 'わ' YetBase
    / 'っ' { 'た' #Did }
    / 'い' { ('つつ' / 'ながら') #While }
    / {'えば' #If }
    / {'う' / 'い' / 'って' / 'おう' #Do }

VerbSuffix5GA = // 防
    / 'が' YetBase
    / 'い' { 'だ' #Did }
    / 'ぎ' { ('つつ' / 'ながら') #While }
    / { 'げば' #If }
    / {'ぐ' / 'ぎ' / 'いで' / 'ごう' #Do }

VerbSuffix5BA = // 遊
    / 'ば' YetBase
    / 'ん' { 'だ' #Did }
    / 'び' { ('つつ' / 'ながら') #While }
    / {'べば' #If }
    / {'ぶ' / 'び' / 'んで' / 'ぼう' #Do }

VerbSuffix1 = // 着る
    / YetBase
    / { 'た' #Did }
    / { ('つつ' / 'ながら') #While }
    / { 'れば' #If }
    / { 'られ' 'る'? #Been }
    / { 'よう' / 'る' / 'て' #Do }

example Sentence 赤いボール
example Sentence 赤かったボール
example Sentence うるさい人
example Sentence うるさかった人
example Sentence うるさくない人
example Sentence うるさかろう人
example Sentence うるさそうだった人
example Sentence うるさいらしい人
example Sentence うるさいでしょう
example Sentence 赤くないボール
example Sentence 赤くなく青いボール
example Sentence 赤くかっこいい人
example Sentence 健康な人
example Sentence 健康だった人
example Sentence 健康でしょう
example Sentence ぞっこんだ
example Sentence なめいもの
example Sentence なめかったもの
example Sentence なめらかだ
example Sentence なめらかなやわらかい布

AdjvChunk =
    / { Adj AdjSuffix #AdjChunk }
    / { AdjVerb AdjVerbSuffix #AdjChunk }

// 美し
Adj = { 
    @choice('dic/ADJ.txt') &[かくけい] #Adj 
}

// 素敵
ADJVERB = 
    / @cat(@choice('dic/ADJV.txt'), 'そう')
    / @choice('dic/ADJV.txt')
AdjVerb = { ADJVERB #Adjv }

AdjSuffix =
    / { 'ければ' #If }
    / { 'くない' #Not }
    / { [くい] #Be }

AdjVerbSuffix =
    / { 'ならば' #If }
    / { 'でない' #Not }
    / { [にでだな] #Be }

/* 文字コード */

Ten = { TEN #Ten }

EOF = !.
EOS = [。．.\n]? EOF
TEN = [、，,\n]
KANJI = [㐀-䶵一-龠々〇〻ーご]
KATA = [ァ-ヶー・]
HIRA = [ぁ-ん]
NONHIRA = (!HIRA .)
ALPHA = [a-zA-Zａ-ｚＡ-Ｚ]
NUM = [\.,0-9０-９一二三四五六七八九十百千万億兆京垓秭穰溝澗正載極]
SYMBOL = [^＾~〜\-ー_＿!！?？#＃$＄&＆=＝@＠*＊+＋/・]


